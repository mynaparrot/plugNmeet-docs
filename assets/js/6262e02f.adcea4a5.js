"use strict";(self.webpackChunkplugnmeet_documentation=self.webpackChunkplugnmeet_documentation||[]).push([[791],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),m=c(n),d=o,y=m["".concat(l,".").concat(d)]||m[d]||s[d]||a;return n?r.createElement(y,i(i({ref:t},u),{},{components:n})):r.createElement(y,i({ref:t},u))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:o,i[1]=p;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7127:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>s,frontMatter:()=>a,metadata:()=>p,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const a={sidebar_position:1},i="Introduction",p={unversionedId:"api/intro",id:"api/intro",title:"Introduction",description:"Default end point will be your Plug-N-Meet Server URL//plugnmeet.example.com/auth",source:"@site/docs/api/intro.md",sourceDirName:"api",slug:"/api/intro",permalink:"/docs/api/intro",draft:!1,editUrl:"https://github.com/mynaparrot/plugNmeet-docs/docs/api/intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Quick join using PHP",permalink:"/docs/tutorials/quick_php"},next:{title:"Create room",permalink:"/docs/api/create_room"}},l={},c=[{value:"SDKs",id:"sdks",level:2}],u={toc:c};function s(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"introduction"},"Introduction"),(0,o.kt)("p",null,"Default end point will be your Plug-N-Meet Server URL: ",(0,o.kt)("inlineCode",{parentName:"p"},"https://plugnmeet.example.com/auth")),(0,o.kt)("p",null,"Plug-N-Meet server accept ",(0,o.kt)("inlineCode",{parentName:"p"},"json")," ",(0,o.kt)("strong",{parentName:"p"},"POST request"),". You'll require to send 2 information in header:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"API-KEY: <Plug-N-Meet Server API Key>\nHASH-SIGNATURE: <hex value of hmac_sha256 using request body & Plug-N-Meet Server API Secret>\n")),(0,o.kt)("p",null,"You also require to send content type json"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Content-type: application/json\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Examples:")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"PHP")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},'$body = json_encode(array(\n            "room_id" => "room01",\n        ));\n$signature = hash_hmac("sha256", $body, "SECRET");\n')),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"NodeJS")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'// using CryptoJS library\nconst body = JSON.stringify({\n    room_id => "room01",\n});\nconst hash = CryptoJS.HmacSHA256(body, "SECRET");\nconst signature = CryptoJS.enc.Hex.stringify(hash);\n')),(0,o.kt)("p",null,"OR"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import { createHmac } from \'crypto\';\n\nconst body = JSON.stringify({\n    room_id => "room01",\n});\nconst signature = createHmac("sha256", "SECRET")\n    .update(body)\n    .digest("hex");\n')),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"Go")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'const body = `{"room_id":"room01"}`\nmac := hmac.New(sha256.New, []byte("SECRET"))\nmac.Write([]byte(body))\nsignature := hex.EncodeToString(mac.Sum(nil))\n')),(0,o.kt)("h2",{id:"sdks"},"SDKs"),(0,o.kt)("p",null,"You can use following ready to use SDKs:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/mynaparrot/plugNmeet-sdk-php"},"PHP")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/mynaparrot/plugNmeet-sdk-js"},"JavaScript")," (",(0,o.kt)("a",{parentName:"li",href:"https://www.npmjs.com/package/plugnmeet-sdk-js"},"NodeJS")," & ",(0,o.kt)("a",{parentName:"li",href:"https://deno.land/x/plugnmeet"},"Deno"),")")))}s.isMDXComponent=!0}}]);