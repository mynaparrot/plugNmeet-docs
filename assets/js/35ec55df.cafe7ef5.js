"use strict";(self.webpackChunkplugnmeet_documentation=self.webpackChunkplugnmeet_documentation||[]).push([[571],{6585:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>o,default:()=>a,frontMatter:()=>d,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"api/room/join","title":"Join Room","description":"plugNmeet join room using API","source":"@site/docs/api/room/join.md","sourceDirName":"api/room","slug":"/api/room/join","permalink":"/docs/api/room/join","draft":false,"unlisted":false,"editUrl":"https://github.com/mynaparrot/plugNmeet-docs/edit/main/docs/api/room/join.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"description":"plugNmeet join room using API","sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Create Room","permalink":"/docs/api/room/create"},"next":{"title":"Room Status (Active/Inactive)","permalink":"/docs/api/room/is-active"}}');var r=n(5813),i=n(4383);const d={description:"plugNmeet join room using API",sidebar_position:2},o="Join Room",c={},l=[{value:"Request Parameters",id:"request-parameters",level:2},{value:"User Info",id:"user-info",level:3},{value:"User Metadata",id:"user-metadata",level:3},{value:"Example",id:"example",level:3},{value:"Response",id:"response",level:2},{value:"Custom Design",id:"custom-design",level:2}];function h(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"join-room",children:"Join Room"})}),"\n",(0,r.jsxs)(s.p,{children:["Endpoint: ",(0,r.jsx)(s.code,{children:"/room/getJoinToken"})]}),"\n",(0,r.jsx)(s.h2,{id:"request-parameters",children:"Request Parameters"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Field"}),(0,r.jsx)(s.th,{children:"Type"}),(0,r.jsx)(s.th,{children:"Required"}),(0,r.jsx)(s.th,{children:"Description"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"room_id"}),(0,r.jsx)(s.td,{children:"string"}),(0,r.jsx)(s.td,{children:"Yes"}),(0,r.jsx)(s.td,{children:"The ID of the room you want to join."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"#user-info",children:"user_info"})}),(0,r.jsx)(s.td,{children:"object"}),(0,r.jsx)(s.td,{children:"Yes"}),(0,r.jsx)(s.td,{children:"Information about the user joining the room."})]})]})]}),"\n",(0,r.jsx)(s.h3,{id:"user-info",children:"User Info"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Field"}),(0,r.jsx)(s.th,{children:"Type"}),(0,r.jsx)(s.th,{children:"Required"}),(0,r.jsx)(s.th,{children:"Description"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"name"}),(0,r.jsx)(s.td,{children:"string"}),(0,r.jsx)(s.td,{children:"Yes"}),(0,r.jsx)(s.td,{children:"The user's full name."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"user_id"}),(0,r.jsx)(s.td,{children:"string"}),(0,r.jsx)(s.td,{children:"Yes"}),(0,r.jsx)(s.td,{children:"A unique identifier for the user."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"is_admin"}),(0,r.jsx)(s.td,{children:"boolean"}),(0,r.jsx)(s.td,{children:"Yes"}),(0,r.jsx)(s.td,{children:"If true, the user will be treated as an admin in the room."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"is_hidden"}),(0,r.jsx)(s.td,{children:"boolean"}),(0,r.jsx)(s.td,{children:"No"}),(0,r.jsx)(s.td,{children:"If true, the user will be invisible in the room."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"#user-metadata",children:"user_metadata"})}),(0,r.jsx)(s.td,{children:"object"}),(0,r.jsx)(s.td,{children:"Yes"}),(0,r.jsx)(s.td,{children:"Additional metadata about the user."})]})]})]}),"\n",(0,r.jsx)(s.h3,{id:"user-metadata",children:"User Metadata"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Field"}),(0,r.jsx)(s.th,{children:"Type"}),(0,r.jsx)(s.th,{children:"Required"}),(0,r.jsx)(s.th,{children:"Description"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"profile_pic"}),(0,r.jsx)(s.td,{children:"string"}),(0,r.jsx)(s.td,{children:"No"}),(0,r.jsx)(s.td,{children:"URL of the user's profile picture."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"preferred_lang"}),(0,r.jsx)(s.td,{children:"string"}),(0,r.jsx)(s.td,{children:"No"}),(0,r.jsxs)(s.td,{children:["Preferred language for the Plug-N-Meet client. See supported values ",(0,r.jsx)(s.a,{href:"https://github.com/mynaparrot/plugNmeet-client/blob/main/src/helpers/languages.ts",children:"here"}),". Example: es-ES, bn-BD, de-DE, etc."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"record_webcam"}),(0,r.jsx)(s.td,{children:"boolean"}),(0,r.jsx)(s.td,{children:"No"}),(0,r.jsx)(s.td,{children:"If false, the user's webcam will not be recorded."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"ex_user_id"}),(0,r.jsx)(s.td,{children:"string"}),(0,r.jsx)(s.td,{children:"No"}),(0,r.jsxs)(s.td,{children:["If empty, the value of ",(0,r.jsx)(s.code,{children:"user_id"})," will be used."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"extra_data"}),(0,r.jsx)(s.td,{children:"string"}),(0,r.jsx)(s.td,{children:"No"}),(0,r.jsx)(s.td,{children:"Any additional data you wish to store."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"/docs/api/room/create#default-lock-settings",children:"lock_settings"})}),(0,r.jsx)(s.td,{children:"object"}),(0,r.jsx)(s.td,{children:"No"}),(0,r.jsx)(s.td,{children:"Lock settings for the user."})]})]})]}),"\n",(0,r.jsx)(s.h3,{id:"example",children:"Example"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-json",children:'{\n  "room_id": "room01",\n  "user_info": {\n    "name": "Your Name",\n    "user_id": "Your-Unique-User-Id",\n    "is_admin": true,\n    "is_hidden": false,\n    "user_metadata": {\n      "profile_pic": "https://profile.pic/im.jpg",\n      "lock_settings": {\n        "lock_microphone": false,\n        "lock_webcam": false,\n        "lock_screen_sharing": true,\n        "lock_chat": false,\n        "lock_chat_send_message": false,\n        "lock_chat_file_share": false\n      }\n    }\n  }\n}\n'})}),"\n",(0,r.jsx)(s.h2,{id:"response",children:"Response"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Field"}),(0,r.jsx)(s.th,{children:"Type"}),(0,r.jsx)(s.th,{children:"Position"}),(0,r.jsx)(s.th,{children:"Description"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"status"}),(0,r.jsx)(s.td,{children:"boolean"}),(0,r.jsx)(s.td,{children:"root"}),(0,r.jsx)(s.td,{children:"Indicates if the request was successful."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"msg"}),(0,r.jsx)(s.td,{children:"string"}),(0,r.jsx)(s.td,{children:"root"}),(0,r.jsx)(s.td,{children:"Response message."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"token"}),(0,r.jsx)(s.td,{children:"string"}),(0,r.jsx)(s.td,{children:"root"}),(0,r.jsx)(s.td,{children:"The join token."})]})]})]}),"\n",(0,r.jsxs)(s.p,{children:["When you receive the token, you can pass it to the plugNmeet-client either as a GET/search parameter named ",(0,r.jsx)(s.code,{children:"access_token"})," or as a cookie named ",(0,r.jsx)(s.code,{children:"pnm_access_token"}),". For example:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:"https://Your-Plug-N-Meet-Server.com/?access_token=<TOKEN HERE>\n"})}),"\n",(0,r.jsxs)(s.p,{children:["If you are hosting the ",(0,r.jsx)(s.a,{href:"https://github.com/mynaparrot/plugNmeet-client",children:"plugNmeet-client"})," static files elsewhere, you should also pass the token in the same way. For example, if your static files are in a ",(0,r.jsx)(s.code,{children:"conference"})," directory:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:"https://Your-Domain.com/conference/?access_token=<TOKEN HERE>\n"})}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Note:"})," You can also use the ",(0,r.jsx)(s.a,{href:"/docs/api/get-client-files",children:"getClientFiles"})," API to retrieve all the CSS and JS files required to display the interface manually. This allows you to embed the Plug-N-Meet client anywhere without worrying about static build files."]}),"\n",(0,r.jsx)(s.h2,{id:"custom-design",children:"Custom Design"}),"\n",(0,r.jsxs)(s.p,{children:["You can add an extra query parameter called ",(0,r.jsx)(s.code,{children:"custom_design"})," to the join link to apply a unique design for each user. The value of ",(0,r.jsx)(s.code,{children:"custom_design"})," should be a URL-encoded JSON object. Supported parameters can be found in the ",(0,r.jsx)(s.a,{href:"/docs/developer-guide/design-customisation#design-parameters",children:"design-parameters"})," documentation. Example:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:"https://Your-Domain.com/conference/?access_token=<TOKEN HERE>&custom_design=%7B%22primary_color%22%3A%22%23004D90%22%2C%22secondary_color%22%3A%22%2324AEF7%22%7D\n"})})]})}function a(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},4383:(e,s,n)=>{n.d(s,{R:()=>d,x:()=>o});var t=n(9729);const r={},i=t.createContext(r);function d(e){const s=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),t.createElement(i.Provider,{value:s},e.children)}}}]);