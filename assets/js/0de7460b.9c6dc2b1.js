"use strict";(self.webpackChunkplugnmeet_documentation=self.webpackChunkplugnmeet_documentation||[]).push([[1387],{6669:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var o=n(3329),i=n(7259),r=n(4482);const s={title:"Who Holds the Keys? A Guide to plugNmeet's End-to-End Encryption Models",slug:"e2ee-key-models-guide",authors:["jibon"],tags:["e2ee","security","encryption","privacy","architecture","developer"]},a=void 0,l={authorsImageUrls:[void 0]},c=[];function d(e){const t={code:"code",p:"p",strong:"strong",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:"In the world of secure communication, End-to-End Encryption (E2EE) is the gold standard. It ensures that only the participants in a conversation can decrypt and view the media streams, not even the server itself. At plugNmeet, we've implemented a robust E2EE model based on the WebRTC Insertable Streams API."}),"\n",(0,i.jsxs)(t.p,{children:['But "E2EE" isn\'t a single, one-size-fits-all solution. A critical question remains: ',(0,i.jsx)(t.strong,{children:"where do the encryption keys come from, and who manages them?"})]}),"\n",(0,i.jsxs)(t.p,{children:["plugNmeet offers two distinct models for managing E2EE keys, controlled by a simple setting: ",(0,i.jsx)(t.code,{children:"enabled_self_insert_encryption_key"}),". Understanding the difference is key to choosing the right security posture for your application."]})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},4482:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>a});var o=n(6363);const i={},r=o.createContext(i);function s(e){const t=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(r.Provider,{value:t},e.children)}},3329:e=>{e.exports=JSON.parse('{"permalink":"/blog/e2ee-key-models-guide","editUrl":"https://github.com/mynaparrot/plugNmeet-docs/edit/main/blog/2025-10-29-e2ee-key-models-guide.md","source":"@site/blog/2025-10-29-e2ee-key-models-guide.md","title":"Who Holds the Keys? A Guide to plugNmeet\'s End-to-End Encryption Models","description":"In the world of secure communication, End-to-End Encryption (E2EE) is the gold standard. It ensures that only the participants in a conversation can decrypt and view the media streams, not even the server itself. At plugNmeet, we\'ve implemented a robust E2EE model based on the WebRTC Insertable Streams API.","date":"2025-10-29T00:00:00.000Z","tags":[{"inline":true,"label":"e2ee","permalink":"/blog/tags/e-2-ee"},{"inline":true,"label":"security","permalink":"/blog/tags/security"},{"inline":true,"label":"encryption","permalink":"/blog/tags/encryption"},{"inline":true,"label":"privacy","permalink":"/blog/tags/privacy"},{"inline":true,"label":"architecture","permalink":"/blog/tags/architecture"},{"inline":true,"label":"developer","permalink":"/blog/tags/developer"}],"readingTime":4.51,"hasTruncateMarker":true,"authors":[{"name":"Jibon L. Costa","title":"Founding developer","url":"https://github.com/jibon57","imageURL":"https://github.com/jibon57.png","key":"jibon","page":null}],"frontMatter":{"title":"Who Holds the Keys? A Guide to plugNmeet\'s End-to-End Encryption Models","slug":"e2ee-key-models-guide","authors":["jibon"],"tags":["e2ee","security","encryption","privacy","architecture","developer"]},"unlisted":false,"nextItem":{"title":"A Major Leap Forward: Announcing the Next Generation of Plug-N-Meet","permalink":"/blog/plugnmeet-next-generation"}}')}}]);