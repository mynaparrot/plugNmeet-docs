"use strict";(self.webpackChunkplugnmeet_documentation=self.webpackChunkplugnmeet_documentation||[]).push([[803],{919:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"installation","title":"How to Install plugNmeet Server | Self-Hosted Installation Guide","description":"A step-by-step guide to installing the open-source plugNmeet server on your Linux machine using our simple, automated script.","source":"@site/docs/installation.md","sourceDirName":".","slug":"/installation","permalink":"/docs/installation","draft":false,"unlisted":false,"editUrl":"https://github.com/mynaparrot/plugNmeet-docs/edit/main/docs/installation.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"How to Install plugNmeet Server | Self-Hosted Installation Guide","description":"A step-by-step guide to installing the open-source plugNmeet server on your Linux machine using our simple, automated script.","keywords":["install","setup","server","linux","self-host","docker","ubuntu","installation","webrtc server"],"sidebar_position":3,"sidebar_label":"Installation Guide"},"sidebar":"tutorialSidebar","previous":{"title":"Ports & Firewall","permalink":"/docs/firewall"},"next":{"title":"Overview","permalink":"/docs/user-guide/overview"}}');var i=t(7259),r=t(4482);const l={title:"How to Install plugNmeet Server | Self-Hosted Installation Guide",description:"A step-by-step guide to installing the open-source plugNmeet server on your Linux machine using our simple, automated script.",keywords:["install","setup","server","linux","self-host","docker","ubuntu","installation","webrtc server"],sidebar_position:3,sidebar_label:"Installation Guide"},o="Installation",a={},c=[{value:"Requirements",id:"requirements",level:2},{value:"Installation Steps",id:"installation-steps",level:2},{value:"Managing Services",id:"managing-services",level:2},{value:"Optional: Fonts Installation",id:"optional-fonts-installation",level:2},{value:"Updating PlugNmeet",id:"updating-plugnmeet",level:2},{value:"Scalable/Distributed setup",id:"scalabledistributed-setup",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"installation",children:"Installation"})}),"\n",(0,i.jsxs)(n.p,{children:["This guide details the official installation process for a self-hosted PlugNmeet server. Our recommended method uses a Docker-based script that automates the setup of all necessary components on a clean Ubuntu or Debian system. The source code for this installation script is available in the ",(0,i.jsx)(n.a,{href:"https://github.com/mynaparrot/plugNmeet-install",children:"plugNmeet-install"})," repository."]}),"\n",(0,i.jsxs)(n.p,{children:["Alternatively, for those who prefer a managed service, our official ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"https://www.plugnmeet.cloud",children:"PlugNmeet Cloud solution"})})," provides a ready-to-use server, allowing you to bypass the installation process entirely. Our cloud solution is built with the same commitment to privacy as our open-source version, following strict security best practices to keep your data safe. For large-scale deployments, it also includes our Intelligent Geo-Distribution feature to reduce latency. You can ",(0,i.jsx)(n.a,{href:"https://www.plugnmeet.cloud/pricing",children:"start with a free plan"})," and upgrade as you grow."]}),"\n",(0,i.jsx)(n.p,{children:"This guide will show you how easy it is to set up your own PlugNmeet web conferencing system using the installation script, so you can start video conferencing right away."}),"\n",(0,i.jsx)(n.h2,{id:"requirements",children:"Requirements"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["A clean ",(0,i.jsx)(n.strong,{children:"Ubuntu or Debian"})," server with a ",(0,i.jsx)(n.strong,{children:"public IP address"}),". We recommend ",(0,i.jsx)(n.strong,{children:"Ubuntu 24.04 LTS"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["If your infrastructure uses a ",(0,i.jsx)(n.strong,{children:"firewall"}),", please ",(0,i.jsx)(n.a,{href:"/docs/firewall",children:"configure ports and firewall"})," before proceeding."]}),"\n",(0,i.jsx)(n.li,{children:"The server should not have Apache or Nginx pre-installed, or the installation will fail."}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Hardware recommendations:"})," The requirements depend on your usage. For small groups, a modest server is sufficient. For production environments, we recommend:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"CPU:"})," At least 4 cores (8 cores or more if using the recorder). A dedicated CPU is recommended."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"RAM:"})," At least 4GB (8GB or more if using the recorder)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Storage:"})," PlugNmeet does not require much storage unless you use the recorder."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Connection speed:"})," At least 100 Mbits/sec bandwidth."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["You will need two subdomains pointing to your server's public IP: one for the main PlugNmeet URL (e.g., ",(0,i.jsx)(n.strong,{children:"plugnmeet.example.com"}),") and one for the TURN server (e.g., ",(0,i.jsx)(n.strong,{children:"turn.example.com"}),")."]}),"\n",(0,i.jsxs)(n.li,{children:["A valid email address is required to generate a ",(0,i.jsx)(n.a,{href:"httpshttps://letsencrypt.org/",children:"Let's Encrypt"})," SSL certificate."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Note:"})," If DNS resolution fails for either domain, the installation will be aborted."]}),"\n",(0,i.jsx)(n.h2,{id:"installation-steps",children:"Installation Steps"}),"\n",(0,i.jsx)(n.p,{children:"Connect to your Ubuntu/Debian server via SSH. Download and run the installation script as the root user:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"wget https://raw.githubusercontent.com/mynaparrot/plugNmeet-install/main/install.sh\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo bash install.sh\n"})}),"\n",(0,i.jsx)(n.p,{children:"Or:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'sudo su -c "bash <(wget -qO- https://raw.githubusercontent.com/mynaparrot/plugNmeet-install/main/install.sh)" root\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Follow the prompts in the terminal. You will be asked to provide information as needed. At the end of the installation, you will receive all relevant details. The script creates a directory under ",(0,i.jsx)(n.code,{children:"/opt"})," called ",(0,i.jsx)(n.code,{children:"plugNmeet"})," and sets up all necessary files and configurations there."]}),"\n",(0,i.jsx)(n.h2,{id:"managing-services",children:"Managing Services"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Start services\nsystemctl start plugnmeet\nsystemctl start plugnmeet-recorder\n\n# Restart services\nsystemctl restart plugnmeet\nsystemctl restart plugnmeet-recorder\n\n# Stop services\nsystemctl stop plugnmeet\nsystemctl stop plugnmeet-recorder\n\n# View log files\ncd /opt/plugNmeet\ntail -n 100 log/plugNmeet.log\ntail -n 100 recorder/logs/recorder.log\n"})}),"\n",(0,i.jsx)(n.h2,{id:"optional-fonts-installation",children:"Optional: Fonts Installation"}),"\n",(0,i.jsx)(n.p,{children:"If you need to export or import Microsoft Word files containing non-English characters, you may encounter font issues. You can install additional fonts on your Ubuntu/Debian server using the following command:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo apt update && sudo apt -y install --no-install-recommends \\\nculmus \\\nfonts-beng \\\nfonts-hosny-amiri \\\nfonts-lklug-sinhala \\\nfonts-lohit-guru \\\nfonts-lohit-knda \\\nfonts-samyak-gujr \\\nfonts-samyak-mlym \\\nfonts-samyak-taml \\\nfonts-sarai \\\nfonts-sil-abyssinica \\\nfonts-sil-padauk \\\nfonts-telu \\\nfonts-thai-tlwg \\\nttf-wqy-zenhei \\\nfonts-arphic-ukai \\\nfonts-arphic-uming \\\nfonts-ipafont-mincho \\\nfonts-ipafont-gothic \\\nfonts-unfonts-core \\\nttf-mscorefonts-installer \\\nfonts-noto-color-emoji\n"})}),"\n",(0,i.jsx)(n.h2,{id:"updating-plugnmeet",children:"Updating PlugNmeet"}),"\n",(0,i.jsxs)(n.p,{children:["To update PlugNmeet, use the ",(0,i.jsx)(n.code,{children:"update.sh"})," script. This will update all Docker images, the client, and the recorder (if installed)."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"wget https://raw.githubusercontent.com/mynaparrot/plugNmeet-install/main/update.sh\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo bash update.sh\n"})}),"\n",(0,i.jsx)(n.p,{children:"Or:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'sudo su -c "bash <(wget -qO- https://raw.githubusercontent.com/mynaparrot/plugNmeet-install/main/update.sh)" root\n'})}),"\n",(0,i.jsx)(n.h2,{id:"scalabledistributed-setup",children:"Scalable/Distributed setup"}),"\n",(0,i.jsxs)(n.p,{children:["PlugNmeet can be set up on multiple hosts to support a large distribution. The setup procedures were discussed in ",(0,i.jsx)(n.a,{href:"/docs/developer-guide/scalable-setup",children:"this article"}),"."]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},4482:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>o});var s=t(6363);const i={},r=s.createContext(i);function l(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);