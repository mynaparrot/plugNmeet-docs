"use strict";(self.webpackChunkplugnmeet_documentation=self.webpackChunkplugnmeet_documentation||[]).push([[7755],{4507:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>n,toc:()=>c});var n=i(3914),o=i(7259),r=i(4482);const s={title:"Your Session, Your Browser: How We Use Client-Side Storage for Privacy and Resilience",slug:"client-side-storage-privacy-resilience",authors:["simon"],tags:["privacy","security","architecture","indexeddb","data-minimization","ux"]},a=void 0,l={authorsImageUrls:[void 0]},c=[];function u(e){const t={p:"p",strong:"strong",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:"We\u2019ve all felt that moment of panic. You\u2019re in an important online meeting, the chat is full of crucial links, and then you accidentally hit refresh. Everything is gone. To solve this, many applications store your entire session on their backend servers. This allows them to restore your session, but it comes at a huge cost: your sensitive data is now stored permanently on someone else's hard drive."}),"\n",(0,o.jsxs)(t.p,{children:["At plugNmeet, we believe this is the wrong trade-off. We've made a deliberate architectural choice to use ",(0,o.jsx)(t.strong,{children:"your browser's own storage"})," to provide a resilient experience without compromising your privacy."]}),"\n",(0,o.jsxs)(t.p,{children:["Our philosophy is simple: ",(0,o.jsx)(t.strong,{children:"if we don't need the data on our server to make the service work, we don't touch it."})]})]})}function d(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},4482:(e,t,i)=>{i.d(t,{R:()=>s,x:()=>a});var n=i(6363);const o={},r=n.createContext(o);function s(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),n.createElement(r.Provider,{value:t},e.children)}},3914:e=>{e.exports=JSON.parse('{"permalink":"/blog/client-side-storage-privacy-resilience","editUrl":"https://github.com/mynaparrot/plugNmeet-docs/edit/main/blog/2025-10-30-client-side-storage-philosophy.md","source":"@site/blog/2025-10-30-client-side-storage-philosophy.md","title":"Your Session, Your Browser: How We Use Client-Side Storage for Privacy and Resilience","description":"We\u2019ve all felt that moment of panic. You\u2019re in an important online meeting, the chat is full of crucial links, and then you accidentally hit refresh. Everything is gone. To solve this, many applications store your entire session on their backend servers. This allows them to restore your session, but it comes at a huge cost: your sensitive data is now stored permanently on someone else\'s hard drive.","date":"2025-10-30T00:00:00.000Z","tags":[{"inline":true,"label":"privacy","permalink":"/blog/tags/privacy"},{"inline":true,"label":"security","permalink":"/blog/tags/security"},{"inline":true,"label":"architecture","permalink":"/blog/tags/architecture"},{"inline":true,"label":"indexeddb","permalink":"/blog/tags/indexeddb"},{"inline":true,"label":"data-minimization","permalink":"/blog/tags/data-minimization"},{"inline":true,"label":"ux","permalink":"/blog/tags/ux"}],"readingTime":2.62,"hasTruncateMarker":true,"authors":[{"name":"Chaboud Simon","title":"Community & Marketing Lead","url":"https://github.com/saimonzone","imageURL":"https://github.com/saimonzone.png","key":"simon","page":null}],"frontMatter":{"title":"Your Session, Your Browser: How We Use Client-Side Storage for Privacy and Resilience","slug":"client-side-storage-privacy-resilience","authors":["simon"],"tags":["privacy","security","architecture","indexeddb","data-minimization","ux"]},"unlisted":false,"prevItem":{"title":"The Anatomy of a Perfect Online Workshop: A Step-by-Step Guide","permalink":"/blog/anatomy-of-a-perfect-online-workshop"},"nextItem":{"title":"Our Philosophy on Recordings: Why We Capture the Whole Picture","permalink":"/blog/recording-philosophy"}}')}}]);