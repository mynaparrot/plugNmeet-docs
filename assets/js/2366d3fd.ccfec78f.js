"use strict";(self.webpackChunkplugnmeet_documentation=self.webpackChunkplugnmeet_documentation||[]).push([[975],{5660:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"firewall","title":"Ports & Firewall","description":"PlugNmeet and LiveKit use several ports to communicate with clients. Before installing PlugNmeet, ensure that these ports are not blocked by your firewall.","source":"@site/docs/firewall.md","sourceDirName":".","slug":"/firewall","permalink":"/docs/firewall","draft":false,"unlisted":false,"editUrl":"https://github.com/mynaparrot/plugNmeet-docs/edit/main/docs/firewall.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Intro","permalink":"/docs/intro"},"next":{"title":"Installation","permalink":"/docs/installation"}}');var s=n(5813),i=n(4383);const l={sidebar_position:2},o="Ports & Firewall",c={},a=[{value:"Required Ports",id:"required-ports",level:2},{value:"Firewall Configuration Guides",id:"firewall-configuration-guides",level:2},{value:"Testing Your Firewall",id:"testing-your-firewall",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"ports--firewall",children:"Ports & Firewall"})}),"\n",(0,s.jsx)(t.p,{children:"PlugNmeet and LiveKit use several ports to communicate with clients. Before installing PlugNmeet, ensure that these ports are not blocked by your firewall."}),"\n",(0,s.jsx)(t.h2,{id:"required-ports",children:"Required Ports"}),"\n",(0,s.jsx)(t.p,{children:"If you are installing PlugNmeet behind a firewall, ensure the following ports are open:"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Port"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Required"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"80"}),(0,s.jsx)(t.td,{children:"TCP"}),(0,s.jsx)(t.td,{children:"Yes"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Required for issuing SSL certificates with Let's Encrypt."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"443"}),(0,s.jsx)(t.td,{children:"TCP"}),(0,s.jsx)(t.td,{children:"Yes"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The primary HTTPS port for communication with HAProxy, which interacts with other services."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"7881"}),(0,s.jsx)(t.td,{children:"TCP"}),(0,s.jsx)(t.td,{children:"Yes"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Used when clients cannot connect via UDP (e.g., VPNs, corporate firewalls)."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"50000-60000"}),(0,s.jsx)(t.td,{children:"UDP"}),(0,s.jsx)(t.td,{children:"Yes"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"LiveKit uses these ports as WebRTC host candidates (each participant will use two ports in this range)."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"443"}),(0,s.jsx)(t.td,{children:"UDP"}),(0,s.jsx)(t.td,{children:"No"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Optional"})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"firewall-configuration-guides",children:"Firewall Configuration Guides"}),"\n",(0,s.jsx)(t.p,{children:"Depending on your server provider, follow the relevant guide:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/authorizing-access-to-an-instance.html",children:"Amazon AWS"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"https://cloud.google.com/vpc/docs/using-firewalls",children:"Google Cloud"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"https://docs.microsoft.com/en-us/azure/virtual-machines/windows/nsg-quickstart-portal",children:"Azure"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"https://docs.digitalocean.com/products/networking/firewalls/how-to/configure-rules/",children:"DigitalOcean"})}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"testing-your-firewall",children:"Testing Your Firewall"}),"\n",(0,s.jsx)(t.p,{children:"After updating your firewall settings, test your configuration before proceeding with the installation."}),"\n",(0,s.jsxs)(t.p,{children:["To verify that the required ports are open, use the ",(0,s.jsx)(t.code,{children:"netcat"})," tool to listen for connections. You will run ",(0,s.jsx)(t.code,{children:"netcat"})," on your PlugNmeet server and use an external computer (outside the firewall) to initiate connections. If the connection test fails, your firewall configuration is incorrect."]}),"\n",(0,s.jsxs)(t.p,{children:["First, install ",(0,s.jsx)(t.code,{children:"netcat"})," on your PlugNmeet server:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"sudo apt install netcat\n"})}),"\n",(0,s.jsx)(t.p,{children:"If you have already installed the PlugNmeet server using the installation script, stop HAProxy and the PlugNmeet server before testing. Otherwise, the ports will remain in use."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"systemctl stop plugnmeet\nsystemctl stop haproxy\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Run ",(0,s.jsx)(t.code,{children:"netcat"})," on your PlugNmeet server to listen on the required ports. As root, execute the following command:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"nc -l 80\n"})}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"netcat"})," will now echo any text it receives on port 80 to the terminal (you can quit the command later using Ctrl/Control + c)."]}),"\n",(0,s.jsxs)(t.p,{children:["Next, on an external computer (outside of the firewall), install ",(0,s.jsx)(t.code,{children:"netcat"}),". If you are using ",(0,s.jsx)(t.strong,{children:"Windows"}),", you can download netcat from ",(0,s.jsx)(t.a,{href:"https://eternallybored.org/misc/netcat/",children:"here"}),". Replace ",(0,s.jsx)(t.code,{children:"YOUR_SERVER_IP"})," with your PlugNmeet domain or the IP address of your PlugNmeet server, and run the following command:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"nc YOUR_SERVER_IP 80\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Type the word ",(0,s.jsx)(t.code,{children:"test"})," and press ENTER. If the firewall is correctly forwarding incoming connections on port 80 to the internal PlugNmeet server, you should see the word ",(0,s.jsx)(t.code,{children:"test"})," appear after the ",(0,s.jsx)(t.code,{children:"nc -l 80"})," command, like this:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"nc -l 80\ntest\n"})}),"\n",(0,s.jsxs)(t.p,{children:["If the word ",(0,s.jsx)(t.code,{children:"test"})," does not appear, double-check the firewall configuration to ensure it is forwarding connections on port 80, and then test again."]}),"\n",(0,s.jsxs)(t.p,{children:["Repeat these tests for ports ",(0,s.jsx)(t.code,{children:"443"})," and ",(0,s.jsx)(t.code,{children:"7881"}),". This covers the testing for TCP ports."]}),"\n",(0,s.jsx)(t.p,{children:"Next, test that UDP connections in the range 50000-60000 are also forwarded. On your PlugNmeet server, run the following netcat command to listen for incoming data via UDP on port 50008 (we're picking a port in the range 50000-60000):"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"nc -u -l 50008\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Again, on a computer outside the firewall, replace ",(0,s.jsx)(t.code,{children:"YOUR_SERVER_IP"})," with your PlugNmeet domain or the IP address of your PlugNmeet server, and run the command:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"nc -u YOUR_SERVER_IP 50008\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Type ",(0,s.jsx)(t.code,{children:"test"})," into the terminal and press ENTER. You should see the word ",(0,s.jsx)(t.code,{children:"test"})," appear on the terminal of the PlugNmeet server, like this:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"nc -u -l 50008\ntest\n"})}),"\n",(0,s.jsx)(t.p,{children:"As before, if the above test fails, double-check the settings of the firewall to ensure it is properly forwarding UDP packets in the range 50000-60000, and test again."})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},4383:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>o});var r=n(9729);const s={},i=r.createContext(s);function l(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);