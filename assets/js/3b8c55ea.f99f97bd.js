"use strict";(self.webpackChunkplugnmeet_documentation=self.webpackChunkplugnmeet_documentation||[]).push([[217],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=p(n),d=r,f=m["".concat(s,".").concat(d)]||m[d]||c[d]||o;return n?a.createElement(f,l(l({ref:t},u),{},{components:n})):a.createElement(f,l({ref:t},u))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var p=2;p<o;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9803:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const o={sidebar_position:2},l="Installation",i={unversionedId:"installation",id:"installation",title:"Installation",description:"We've created an easy to install script which can be used to install all the necessary components in few minutes. Please check plugNmeet-install repo.",source:"@site/docs/installation.md",sourceDirName:".",slug:"/installation",permalink:"/docs/installation",draft:!1,editUrl:"https://github.com/mynaparrot/plugNmeet-docs/docs/installation.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Intro",permalink:"/docs/intro"},next:{title:"Overview",permalink:"/docs/user-guide/overview"}},s={},p=[{value:"Requirements",id:"requirements",level:2},{value:"Usage",id:"usage",level:2},{value:"Fonts installation",id:"fonts-installation",level:4},{value:"Update",id:"update",level:2}],u={toc:p};function c(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"installation"},"Installation"),(0,r.kt)("p",null,"We've created an easy to install script which can be used to install all the necessary components in few minutes. Please check ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/mynaparrot/plugNmeet-install"},"plugNmeet-install")," repo."),(0,r.kt)("h2",{id:"requirements"},"Requirements"),(0,r.kt)("p",null,"You'll need a clean ",(0,r.kt)("strong",{parentName:"p"},"Ubuntu or Debian")," server with a ",(0,r.kt)("strong",{parentName:"p"},"public IP address"),". If you have a firewall, the following ports must be\nopened:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"80/tcp\n443/tcp\n7881/tcp\n443/udp\n50000:60000/udp\n")),(0,r.kt)("p",null,"Make sure your Ubuntu/Debian server does not come pre-installed with apache or nginx, or else the installation will fail."),(0,r.kt)("p",null,"You'll need three subdomains that point to the public IP address of this Ubuntu/Debian server.\nExample: ",(0,r.kt)("inlineCode",{parentName:"p"},"plugnmeet.example.com, livekit.example.com, turn.example.com"),". A valid email address is also required to\ngenerate a ",(0,r.kt)("a",{parentName:"p",href:"https://letsencrypt.org/"},"Let's Encrypt")," SSL certificate."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"Note:"))," If DNS fails for those three domains, the installation will be aborted."),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("p",null,"Using SSH, connect to your Ubuntu/Debian server. Download and run the installation script as the root user."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'wget https://raw.githubusercontent.com/mynaparrot/plugNmeet-install/main/install.sh\nsudo bash install.sh\n\nOR\n\nsudo su -c "bash <(wget -qO- https://raw.githubusercontent.com/mynaparrot/plugNmeet-install/main/install.sh)" root\n')),(0,r.kt)("p",null,"Now, follow the steps in terminal. It will ask you to enter information when necessary. You'll receive the relevant\ninformation at the end of the installation."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"Note:"))," If you get a 404 error or the recorder stops working, you can restart service\nby ",(0,r.kt)("inlineCode",{parentName:"p"},"systemctl restart plugnmeet && systemctl restart plugnmeet-recorder"),"."),(0,r.kt)("h4",{id:"fonts-installation"},"Fonts installation"),(0,r.kt)("p",null,"When exporting or importing Microsoft Word files that contain characters other than English, you may run into issues because of font missing. You may install additional fonts in the Ubuntu/Debian server using the commands below:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"sudo apt update && sudo apt -y install --no-install-recommends \\\nculmus \\\nfonts-beng \\\nfonts-hosny-amiri \\\nfonts-lklug-sinhala \\\nfonts-lohit-guru \\\nfonts-lohit-knda \\\nfonts-samyak-gujr \\\nfonts-samyak-mlym \\\nfonts-samyak-taml \\\nfonts-sarai \\\nfonts-sil-abyssinica \\\nfonts-sil-padauk \\\nfonts-telu \\\nfonts-thai-tlwg \\\nttf-wqy-zenhei \\\nfonts-arphic-ukai \\\nfonts-arphic-uming \\\nfonts-ipafont-mincho \\\nfonts-ipafont-gothic \\\nfonts-unfonts-core \\\nttf-mscorefonts-installer\n")),(0,r.kt)("h2",{id:"update"},"Update"),(0,r.kt)("p",null,"To update you can use ",(0,r.kt)("inlineCode",{parentName:"p"},"update.sh")," script. This will update all the docker images, client & recorder (if installed)."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'wget https://raw.githubusercontent.com/mynaparrot/plugNmeet-install/main/update.sh\nsudo bash update.sh\n\nOR\n\nsudo su -c "bash <(wget -qO- https://raw.githubusercontent.com/mynaparrot/plugNmeet-install/main/update.sh)" root\n')))}c.isMDXComponent=!0}}]);